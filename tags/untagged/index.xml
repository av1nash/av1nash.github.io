<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Untagged on My reflections</title><link>https://av1nash.github.io/tags/untagged/</link><description>Recent content in Untagged on My reflections</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 26 Mar 2019 00:00:01 -0500</lastBuildDate><atom:link href="https://av1nash.github.io/tags/untagged/index.xml" rel="self" type="application/rss+xml"/><item><title>Mssql Find and Remove Hidden Chars</title><link>https://av1nash.github.io/posts/mssql-find-and-remove-hidden-chars/</link><pubDate>Tue, 26 Mar 2019 00:00:01 -0500</pubDate><guid>https://av1nash.github.io/posts/mssql-find-and-remove-hidden-chars/</guid><description>When working with large text fields (usually they come from fields which allow users to enter free text in front end or email body etc.) it is possible to encounter data which has invisible characters. These characters could be invisible to your eyes in management studio while querying or to certain functions like - LTRIM, RTRIM or in a predicate condition like -
WHERE([ColumnName]) &amp;lt;&amp;gt; &amp;#39;&amp;#39; You can try a brute force method to resolve this by replacing commonly occuring invisible characters like -</description></item><item><title>Mssql Counting Rows</title><link>https://av1nash.github.io/posts/mssql-counting-rows/</link><pubDate>Fri, 29 Dec 2017 00:00:01 -0500</pubDate><guid>https://av1nash.github.io/posts/mssql-counting-rows/</guid><description>One can count number of rows in a table in many ways and depending upon the chosen option results may or may not be same.
Reason being the way SQL handles NULL while counting. Following are three different ways to COUNT number of rows in a table:
Query Results SELECT COUNT(*) returns total row count SELECT COUNT(1) returns total row count SELECT COUNT() returns row count where IS NOT NULL</description></item><item><title>Mssql Finding Primenumbers</title><link>https://av1nash.github.io/posts/mssql-finding-primenumbers/</link><pubDate>Sun, 26 Feb 2017 00:00:01 -0500</pubDate><guid>https://av1nash.github.io/posts/mssql-finding-primenumbers/</guid><description>This is a problem I found in Hacker Rank. I did not had a clue how I can solve it in MS SQL, I mean I know what the logic of finding a prime number is but how do I apply that to MS SQL.
Then I came across this solution from a user rodbourn and this is an absolutely amazing SQL query, every line is a concept in itself and I thought I will dissect it to understand it and maybe help someone else in the process.</description></item><item><title>Setting Up Vstools for RServices</title><link>https://av1nash.github.io/posts/setting-up-vstools-for-rservices/</link><pubDate>Sun, 12 Feb 2017 00:00:01 -0500</pubDate><guid>https://av1nash.github.io/posts/setting-up-vstools-for-rservices/</guid><description>I am trying to follow this course Introduction to Microsoft R Server but with the exception that I wanted to run the R script on my SQL Server R Services (in database) rather than Microsoft R Client. This required making following changes:
Specifying path of R Engine in VS RTool.
Open RTools Options and specify the path to your Rserver folder (default in case of SQL Server 2016 is C:\Program Files\Microsoft SQL Server\130\R_SERVER) 2.</description></item><item><title>Setup Sqlserver Rservices</title><link>https://av1nash.github.io/posts/setup-sqlserver-rservices/</link><pubDate>Sat, 11 Feb 2017 00:00:01 -0500</pubDate><guid>https://av1nash.github.io/posts/setup-sqlserver-rservices/</guid><description>MSDN Article here explains in detail the steps required to set up SQL Server R Services (In-Database). For those who have already installed R Services as part of their SQL Server 2016 installation (like me) and looking for enabling the R services, you can open SQL Server management studio and run following command:
Exec sp_configure &amp;#39;external scripts enabled&amp;#39;, 1 Reconfigure with override Open services.msc and restart SQL Server services. Now you can run a test script to ensure that the changes are in effect.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tutorial on My Reflections</title><link>https://av1nash.github.io/categories/tutorial/</link><description>Recent content in tutorial on My Reflections</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 05 Mar 2020 14:53:00 -0500</lastBuildDate><atom:link href="https://av1nash.github.io/categories/tutorial/index.xml" rel="self" type="application/rss+xml"/><item><title>Running MS SQL on Linux in AKS</title><link>https://av1nash.github.io/post/mssql-on-linux-aks/</link><pubDate>Thu, 05 Mar 2020 14:53:00 -0500</pubDate><guid>https://av1nash.github.io/post/mssql-on-linux-aks/</guid><description> Creating a kubernetes cluster Login to you azure account 1 2 3 ```sh az login ``` Create resources 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ```sh #Create a resource group az group create --name rgACR --location eastus #Create an Azure container registry instance az acr create --resource-group rgACR --name dockerSQL2019 --sku Basic #Log in to the container registry az acr login --name dockerSQL2019 #Create an AKS cluster az aks create --resource-group rgACR --name sqlAKSCluster --node-count 2 --generate-ssh-keys --attach-acr dockersql2019 #To configure kubectl to connect to your Kubernetes cluster az aks get-credentials --resource-group rgACR --name sqlAKSCluster #To verify the connection to your cluster kubectl get nodes #Create an SA password in the Kubernetes cluster kubectl create secret generic mssql --from-literal=SA_PASSWORD=&amp;#34;ComplexPassword&amp;#34; ```</description></item><item><title>Counting rows in T-SQL</title><link>https://av1nash.github.io/post/mssql-counting-rows/</link><pubDate>Fri, 29 Dec 2017 00:00:01 -0500</pubDate><guid>https://av1nash.github.io/post/mssql-counting-rows/</guid><description>One can count number of rows in a table in many ways and depending upon the chosen option results may or may not be same.
Reason being the way SQL handles NULL while counting. Following are three different ways to COUNT number of rows in a table:
Query Results SELECT COUNT(*) returns total row count SELECT COUNT(1) returns total row count SELECT COUNT([Col Name]) returns row count where [Col Name] IS NOT NULL</description></item><item><title>Finding Prime numbers using T-SQL</title><link>https://av1nash.github.io/post/mssql-finding-primenumbers/</link><pubDate>Sun, 26 Feb 2017 00:00:01 -0500</pubDate><guid>https://av1nash.github.io/post/mssql-finding-primenumbers/</guid><description>This is a problem I found on Hacker Rank. I did not had a clue how I can solve it in MS SQL, I mean I know what the logic of finding a prime number is but how do I apply that to MS SQL.
Then I came across this solution from a user rodbourn and this is an absolutely amazing SQL query, every line is a concept in itself and I thought I will dissect it to understand it and maybe help someone else in the process.</description></item></channel></rss>
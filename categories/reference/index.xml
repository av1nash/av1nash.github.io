<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>reference on My Reflections</title><link>https://av1nash.github.io/categories/reference/</link><description>Recent content in reference on My Reflections</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 11 Oct 2020 10:19:00 +0000</lastBuildDate><atom:link href="https://av1nash.github.io/categories/reference/index.xml" rel="self" type="application/rss+xml"/><item><title>Seneca, On saving time</title><link>https://av1nash.github.io/post/on-saving-time/</link><pubDate>Sun, 11 Oct 2020 10:19:00 +0000</pubDate><guid>https://av1nash.github.io/post/on-saving-time/</guid><description>While browsing random wikipedia articles, I came across an interesting piece of work called &amp;ldquo;Moral Letters to Lucilius by Seneca&amp;rdquo; ðŸ”—
This form of writing is called Epistles and is defined as
a poem or other literary work in the form of a letter or series of letters
Written by the Roman philosopher Seneca to Lucilius who was apparently a friend.
There are total 124 such letters and I just read and made some notes on the first one - On saving time.</description></item><item><title>Stock market sectors &amp; industries</title><link>https://av1nash.github.io/post/sector-industry/</link><pubDate>Fri, 09 Oct 2020 07:54:00 +0000</pubDate><guid>https://av1nash.github.io/post/sector-industry/</guid><description/></item><item><title>I, Pencil</title><link>https://av1nash.github.io/post/i-pencil/</link><pubDate>Mon, 05 Oct 2020 23:15:00 +0000</pubDate><guid>https://av1nash.github.io/post/i-pencil/</guid><description>I think I heard about it first in a ted talk but didn&amp;rsquo;t really bother myself to read the actual essay, but after watching this video by Milton Friedman, I just had to read I, Pencil by Leonard E. Read.
I tried to summarize it for myself, thought I will share here -
Concluding paragraph of the essay is just too difficult to summarize, so adding it here as-is with my highlights -</description></item><item><title>Why you should volunteer for a non-profit</title><link>https://av1nash.github.io/post/volunteering/</link><pubDate>Sun, 20 Sep 2020 12:29:00 +0000</pubDate><guid>https://av1nash.github.io/post/volunteering/</guid><description>Volunteering for a non-profit organization is a great way to grow as a person, you get to meet so many awesome indivudals who bring change in other people lives and you get to be a part of that experience.
In the last three years I had the privilege of volunteering for a bunch of local (Charleston, SC) non-profit organizations and wanted to share some of my experiences here.
Turning Leaf Project ðŸ”— Volunteered on: 06/07/2019</description></item><item><title>Fundamental attribution error</title><link>https://av1nash.github.io/post/attribution-error/</link><pubDate>Wed, 10 Jun 2020 11:30:00 +0000</pubDate><guid>https://av1nash.github.io/post/attribution-error/</guid><description/></item><item><title>Maslow&#39;s Hierarchy of Needs</title><link>https://av1nash.github.io/post/maslowhierarchy/</link><pubDate>Sat, 30 May 2020 13:17:29 +0000</pubDate><guid>https://av1nash.github.io/post/maslowhierarchy/</guid><description/></item><item><title>Principle of least astonishment</title><link>https://av1nash.github.io/post/pola/</link><pubDate>Tue, 05 May 2020 16:23:28 +0000</pubDate><guid>https://av1nash.github.io/post/pola/</guid><description>From Wikipedia:
Principle of least astonishment (POLA), also called the principle of least surprise states that a component of a system should behave in a way that most users will expect it to behave; the behavior should not astonish or surprise users.
Examples: In Windows operating system, when you hit &amp;ldquo;F1&amp;rdquo; on keyboard it usually opens the help for that particular program, if you created a program which instead closed the window - it will astonish the users of your program and should be redesigned according to the principle of least astonishment.</description></item><item><title>System uptime</title><link>https://av1nash.github.io/post/system-uptime/</link><pubDate>Mon, 04 May 2020 23:50:20 +0000</pubDate><guid>https://av1nash.github.io/post/system-uptime/</guid><description>High Availability is the property of a system which measures its uptime. When you measure your system&amp;rsquo;s uptime and are confident that no matter what, at minimum your system remains up x hours per year you can offer it as a commitment to the users of your system by signing a SLA (Service-level agreement)
System uptime is usually expressed as three nines, four nines or five nines. You can translate it into uptime or downtime hours per year by multiplying it with the total number of hours in a year (8760).</description></item><item><title>Streisand Effect</title><link>https://av1nash.github.io/post/streisand-effect/</link><pubDate>Mon, 04 May 2020 14:26:03 +0000</pubDate><guid>https://av1nash.github.io/post/streisand-effect/</guid><description>Psychological reactance From Wikipedia:
Psychological reactance is &amp;ldquo;an unpleasant motivational arousal that emerges when people experience a threat to or loss of their free behaviors.&amp;rdquo; An example of such behavior can be observed when an individual engages in a prohibited activity in order to deliberately taunt the authority who prohibits it, regardless of the utility or disutility that the activity confers.
Streisand effect is an example of psychological reactance, wherein once people are aware that some information is being kept from them, they are significantly more motivated to access and spread that information.</description></item><item><title>Databricks Cheatsheet</title><link>https://av1nash.github.io/post/databricks-shortcut/</link><pubDate>Mon, 02 Mar 2020 12:18:00 -0500</pubDate><guid>https://av1nash.github.io/post/databricks-shortcut/</guid><description>General Shortcut Description Ctrl + / Multiline comment Cmd + / Toggle line comment Shift + Enter Run command and move to next cell Spark Dataframe Shortcut Description df.head() returns first few rows of a dataframe df.count() returns count of non null values of all columns in a dataframe df.</description></item><item><title>Understanding payments processing stack</title><link>https://av1nash.github.io/post/understanding-payments-layercake/</link><pubDate>Mon, 02 Mar 2020 12:18:00 -0500</pubDate><guid>https://av1nash.github.io/post/understanding-payments-layercake/</guid><description>[text1] [text2] [text3]</description></item></channel></rss>
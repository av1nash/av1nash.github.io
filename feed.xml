<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2021-08-11T22:26:23+00:00</updated><id>/feed.xml</id><title type="html">avi</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><author><name>Avinash Tripathi</name></author><entry><title type="html">Partitioning table in Azure Synapse</title><link href="/how-to/sql-table-partitions/" rel="alternate" type="text/html" title="Partitioning table in Azure Synapse" /><published>2021-07-16T18:00:00+00:00</published><updated>2021-07-16T18:00:00+00:00</updated><id>/how-to/sql-table-partitions</id><content type="html" xml:base="/how-to/sql-table-partitions/">&lt;p&gt;Mostly sourced from this &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/synapse-analytics/sql-data-warehouse/sql-data-warehouse-tables-partition&quot;&gt;article&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;table-partition&quot;&gt;Table Partition&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;Enables you to divide data into smaller groups of data.&lt;/li&gt;
  &lt;li&gt;Mostly created on a date column.&lt;/li&gt;
  &lt;li&gt;Supported on all table types:
    &lt;ul&gt;
      &lt;li&gt;clustered columnstore&lt;/li&gt;
      &lt;li&gt;clustered index&lt;/li&gt;
      &lt;li&gt;heap&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Supported on all distribution types:
    &lt;ul&gt;
      &lt;li&gt;hash&lt;/li&gt;
      &lt;li&gt;round robin&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Can be done on &lt;strong&gt;one&lt;/strong&gt; column only.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;benefits&quot;&gt;Benefits&lt;/h2&gt;

&lt;h3 id=&quot;load-operations&quot;&gt;Load operations&lt;/h3&gt;
&lt;p&gt;When leveraging partitions to load data into a table, you can avoid use of transaction logs, significantly improving performance.&lt;/p&gt;

&lt;h4 id=&quot;insertsupdatesdeletes&quot;&gt;Inserts/Updates/Deletes&lt;/h4&gt;
&lt;p&gt;Leverage &lt;strong&gt;Partition Switching&lt;/strong&gt; to move entire partitions between tables. This is a metadata-only operation i.e. no physical movement of data is involved.&lt;/p&gt;

&lt;p&gt;Partition switching is executed using &lt;strong&gt;ALTER TABLE SWITCH&lt;/strong&gt; statement.&lt;/p&gt;

&lt;p&gt;General requirements for Switching Partitions&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Both tables must exist before the SWITCH operation.&lt;/li&gt;
  &lt;li&gt;The receiving partition must exist and it must be empty.&lt;/li&gt;
  &lt;li&gt;The receiving nonpartitioned table must exist and it must be empty.&lt;/li&gt;
  &lt;li&gt;Partitions must be on the same column.&lt;/li&gt;
  &lt;li&gt;Source and target tables must share the same filegroup.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/previous-versions/sql/sql-server-2008-r2/ms191160(v=sql.105)#general-requirements-for-switching-partitions&quot;&gt;More details&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;partition-switching-patterns&quot;&gt;Partition Switching patterns&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/fAd0yHA.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h6 id=&quot;1-switch-from-non-partitioned-table-to-non-partitioned-table&quot;&gt;1. Switch from non-partitioned table to non-partitioned table&lt;/h6&gt;
&lt;pre&gt;&lt;code class=&quot;language-sql=&quot;&gt;ALTER TABLE src_tbl SWITCH TO tgt_tbl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/5YyXMzP.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; tgt_tbl MUST be empty and should have exact same schema as src_tbl, or SQL server will throw an error.&lt;/p&gt;

&lt;h6 id=&quot;2-switch-from-non-partitioned-table-to-partitioned-table&quot;&gt;2. Switch from non-partitioned table to partitioned table&lt;/h6&gt;
&lt;p&gt;&lt;em&gt;This is &lt;ins&gt;not supported&lt;/ins&gt; in Azure Synapse, as check constraints are not supported to enforce the range of values in a table.&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sql=&quot;&gt;ALTER TABLE src_tbl SWITCH TO tgt_tbl PARTITION 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/IwP5aC9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Above SQL statement will fail if (non-partitioned) src_tbl doesn’t have check constraints to validate that it only contains data with values that are allowed in partition 1 on the (partitioned) tgt_tbl.&lt;/p&gt;

&lt;p&gt;If such a constraint was not added while creating the table, you can alter the table to add the constraint.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql=&quot;&gt;ALTER TABLE src_tbl
WITH CHECK ADD CONSTRAINT orderdate_check
CHECK(order_date IS NOT NULL AND order_date &amp;lt;'2008-01-01')
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&quot;3-switch-from-partitioned-table-to-non-partitioned-table&quot;&gt;3. Switch from partitioned table to non-partitioned table&lt;/h6&gt;
&lt;pre&gt;&lt;code class=&quot;language-sql=&quot;&gt;ALTER TABLE src_tbl SWITCH PARTITION 1 TO tgt_tbl; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/FFJimPv.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h6 id=&quot;4-switch-from-partitioned-table-to-partitioned-table&quot;&gt;4. Switch from partitioned table to partitioned table&lt;/h6&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/u0rOPLx.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql=&quot;&gt;ALTER TABLE src_tbl SWITCH PARTITION 2 TO tgt_tbl PARTITION 2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In our example, tgt_tbl didn’t had any rows in partition # 2 but if it had rows in that partition, sql server will throw this error message:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;ALTER TABLE SWITCH statement failed. The specified partition 2 of target table ‘Distribution_16.dbo.Table_54e7fg12e67a45d9859e904b723a9ae7_16’ must be empty.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are two ways to deal with the scenario when target table’s partition is not empty:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Solution # 1
```sql=
–Clear partition # 2 by switching it to a dummy table (partitioned to non-partitioned table switching pattern)
ALTER TABLE tgt_tbl PARTITION 2 SWITCH TO stg_tbl;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;–Switch from partitioned table to partitioned table 
ALTER TABLE src_tbl SWITCH PARTITION 2 to tgt_tbl PARTITION 2;&lt;/p&gt;

&lt;p&gt;–truncate dummy table
TRUNCATE TABLE stg_tbl;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2. Solution # 2
```sql=
ALTER TABLE src_tbl SWITCH PARTITION 2 to tgt_tbl PARTITION WITH (TRUNCATE_TARGET = ON)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;query-operations&quot;&gt;Query operations&lt;/h3&gt;
&lt;p&gt;Partitioning can improve query performance by limiting the scan to only the qualifying partitions. This method of filtering can avoid a full table scan and only scan a smaller subset of data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Clustered columnstore indexes make predicate elimination performance benefits less beneficial, but in some cases there can be a benefit to queries.&lt;/p&gt;</content><author><name>Avinash Tripathi</name></author><category term="how-to" /><category term="Azure Synapse" /><category term="Database" /><category term="Partitioning" /><summary type="html">Mostly sourced from this article</summary></entry></feed>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on My reflections</title><link>https://av1nash.github.io/posts/</link><description>Recent content in Posts on My reflections</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 25 Mar 2020 12:20:00 -0500</lastBuildDate><atom:link href="https://av1nash.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Very simple Git workflow</title><link>https://av1nash.github.io/posts/simple-git-workflow/</link><pubDate>Wed, 25 Mar 2020 12:20:00 -0500</pubDate><guid>https://av1nash.github.io/posts/simple-git-workflow/</guid><description>Simple git workflow
Open command prompt and go to your local copy of your repository. dos cd C:\Workplace\DevOps\reponame\ Create new branch. dos git checkout -b user/avinash-addNewPackage Make your changes to the local copy of repository. Stage your changes dos git add * Commit your changes. dos git commit -m &amp;quot;Adding new package&amp;quot; Push your changes to remote branch. dos git push origin user/avinash-addNewPackage Go to Azure DevOps and create a pull request to merge your work with master branch.</description><content type="html"><![CDATA[<p><strong>Simple git workflow</strong></p>

<ol>
<li>Open command prompt and go to your local copy of your repository.
<code>dos
cd C:\Workplace\DevOps\reponame\
</code></li>
<li>Create new branch.
<code>dos
git checkout -b user/avinash-addNewPackage
</code></li>
<li>Make your changes to the local copy of repository.</li>
<li>Stage your changes
<code>dos
git add *
</code></li>
<li>Commit your changes.
<code>dos
git commit -m &quot;Adding new package&quot;
</code></li>
<li>Push your changes to remote branch.
<code>dos
git push origin user/avinash-addNewPackage
</code></li>
<li>Go to Azure DevOps and create a pull request to merge your work with master branch.</li>
</ol>
]]></content></item><item><title>Running MS SQL on Linux in AKS</title><link>https://av1nash.github.io/posts/mssql-on-linux-aks/</link><pubDate>Thu, 05 Mar 2020 14:53:00 -0500</pubDate><guid>https://av1nash.github.io/posts/mssql-on-linux-aks/</guid><description>Creating a kubernetes cluster
Login to you azure account console az login Create resources
#Create a resource group az group create --name rgACR --location eastus #Create an Azure container registry instance az acr create --resource-group rgACR --name dockerSQL2019 --sku Basic #Log in to the container registry az acr login --name dockerSQL2019 #Create an AKS cluster az aks create --resource-group rgACR --name sqlAKSCluster --node-count 2 --generate-ssh-keys --attach-acr dockersql2019 #To configure kubectl to connect to your Kubernetes cluster az aks get-credentials --resource-group rgACR --name sqlAKSCluster #To verify the connection to your cluster kubectl get nodes #Create an SA password in the Kubernetes cluster kubectl create secret generic mssql --from-literal=SA_PASSWORD=&amp;#34;ComplexPassword&amp;#34;</description><content type="html"><![CDATA[<p><strong>Creating a kubernetes cluster</strong></p>

<ol>
<li>Login to you azure account
<code>console
az login
</code></li>

<li><p>Create resources</p>
<div class="highlight"><pre style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-console" data-lang="console">    #Create a resource group
    az group create --name rgACR --location eastus

    #Create an Azure container registry instance
    az acr create --resource-group rgACR --name dockerSQL2019 --sku Basic

    #Log in to the container registry
    az acr login --name dockerSQL2019

    #Create an AKS cluster
    az aks create --resource-group rgACR --name sqlAKSCluster --node-count 2 --generate-ssh-keys --attach-acr dockersql2019

    #To configure kubectl to connect to your Kubernetes cluster
    az aks get-credentials --resource-group rgACR --name sqlAKSCluster

    #To verify the connection to your cluster
    kubectl get nodes

    #Create an SA password in the Kubernetes cluster
    kubectl create secret generic mssql --from-literal=SA_PASSWORD=&#34;ComplexPassword&#34;</code></pre></div></li>

<li></li>
</ol>
]]></content></item><item><title>Databricks Cheatsheet</title><link>https://av1nash.github.io/posts/databricks-shortcut/</link><pubDate>Mon, 02 Mar 2020 12:18:00 -0500</pubDate><guid>https://av1nash.github.io/posts/databricks-shortcut/</guid><description>General
Shortcut Description Ctrl + / Multiline comment Spark Dataframe
Shortcut Description df.head() returns first few rows of a dataframe df.count() returns count of non null values of all columns in a dataframe</description><content type="html"><![CDATA[<p><strong>General</strong></p>

<table>
<thead>
<tr>
<th>Shortcut</th>
<th>Description</th>
</tr>
</thead>

<tbody>
<tr>
<td>Ctrl + /</td>
<td>Multiline comment</td>
</tr>

<tr>
<td></td>
<td></td>
</tr>

<tr>
<td></td>
<td></td>
</tr>
</tbody>
</table>

<p><strong>Spark Dataframe</strong></p>

<table>
<thead>
<tr>
<th>Shortcut</th>
<th>Description</th>
</tr>
</thead>

<tbody>
<tr>
<td>df.head()</td>
<td>returns first few rows of a dataframe</td>
</tr>

<tr>
<td>df.count()</td>
<td>returns count of non null values of all columns in a dataframe</td>
</tr>

<tr>
<td></td>
<td></td>
</tr>
</tbody>
</table>
]]></content></item><item><title>Understanding payments processing stack</title><link>https://av1nash.github.io/posts/understanding-payments-layercake/</link><pubDate>Mon, 02 Mar 2020 12:18:00 -0500</pubDate><guid>https://av1nash.github.io/posts/understanding-payments-layercake/</guid><description>[text1] [text2] [text3]</description><content type="html"><![CDATA[<p>[<a href="https://www.finixpayments.com/blog/understanding-the-payments-stack/">text1</a>]
[<a href="https://fin.plaid.com/articles/major-players-in-payment-processing/">text2</a>]
[<a href="https://www.cbinsights.com/research/report/stripe-teardown/">text3</a>]</p>
]]></content></item><item><title>Overview of Back Up &amp; Restore of MS Sql Server Databases</title><link>https://av1nash.github.io/posts/mssql-backuprestore-overview/</link><pubDate>Wed, 19 Feb 2020 16:09:00 -0500</pubDate><guid>https://av1nash.github.io/posts/mssql-backuprestore-overview/</guid><description>Managed services on Azure like Azure SQL Database, Azure Synapse (Azure SQL Datawarehouse) &amp;amp; SQL Managed Instances makes it very easy to create a backup &amp;amp; restore strategies. In scenarios where you are spinning up a SQL instance on an Azure VM or a local environment, it will be upto you to do some configurations so that you have a backup and restore strategy available to support your business requirement.</description><content type="html"><![CDATA[<p>Managed services on Azure like Azure SQL Database, Azure Synapse (Azure SQL Datawarehouse) &amp; SQL Managed Instances makes it very easy to create a backup &amp; restore strategies. In scenarios where you are spinning up a SQL instance on an Azure VM or a local environment, it will be upto you to do some configurations so that you have a backup and restore strategy available to support your business requirement.</p>
]]></content></item><item><title>Summing a Geometric Series</title><link>https://av1nash.github.io/posts/summing-a-geometric-series/</link><pubDate>Mon, 02 Dec 2019 11:56:00 -0500</pubDate><guid>https://av1nash.github.io/posts/summing-a-geometric-series/</guid><description>As is the nature of internet, I was reading something and one thing lead to another. When my conscious mind took over, I was staring at a page talking about Geometric Series, to be precise this page Mailchimp - Summing Geometric Series. Its been a while since I read something in Mathematics domain, so to exercise my brain, I thought of reading and following along with the explanation. Since I am making a conscious effort to record things more diligently, this is my attempt to understand the text.</description><content type="html"><![CDATA[<p>As is the nature of internet, I was reading something and one thing lead to another. When my conscious mind took over, I was staring at a page talking about Geometric Series, to be precise this page <a href="http://www.moneychimp.com/articles/finworks/fmgeom.htm#formula">Mailchimp - Summing Geometric Series</a>. Its been a while since I read something in Mathematics domain, so to exercise my brain, I thought of reading and following along with the explanation. Since I am making a conscious effort to record things more diligently, this is my attempt to understand the text.</p>

<p>From <a href="https://en.wikipedia.org/wiki/Geometric_series">Wikipedia</a>
&gt; In mathematics, a geometric series is a series with a constant ratio between successive terms</p>

<p>For example: a series of the form: 1 + 2 + 2^2 + 2^3 &hellip; has a constant ratio of 2 between successive terms.</p>

<p>So if someone asks you to calculate this: 1 + 2 + 2^2 + 2^3 + &hellip;.+ 2^50, you can use the formula to evaluate a Geometric series, following is a method to come up with that formula:</p>

<p>In a more generic form such a series can be represented as:
f(n) = 1 + z + z^2 + &hellip;. + z^n</p>

<p>If I know the formula for f(n), how can I use that to find f(n+1) ?
This is same as saying, if I know:</p>

<p>f(2) = 1+ z + z^2</p>

<p>&amp;</p>

<p>f(3) = 1 + z + z^2 + z^3</p>

<p>then how can i represent f(3) in terms of f(2) and the answer will be:</p>

<p>f(3) or f(2+1) = f(2) + z^(2+1)</p>

<p>In more general terms:</p>

<p><strong>f(n+1) = f(n) + z^(n+1)</strong></p>

<p>There is one more way to get f(n+1), lets start with our original function:</p>

<p>f(n) = 1 + z + z^2 + &hellip;. + z^n</p>

<p>Lets multiply z on both sides of this equation:</p>

<p>z.f(n) = z + z^2 + &hellip;. + z^n + z^(n+1)</p>

<p>Lets add 1 on both sides of this equation:</p>

<p>z.f(n) + 1 = 1 + z + z^2 + &hellip;. + z^n + z^(n+1)</p>

<p><strong>z.f(n) + 1 = f(n+1)</strong></p>

<p>If we equate the two formulas that we have worked out for f(n+1):</p>

<p>z.f(n) + 1 = f(n) + z^(n+1)</p>

<p>Solving for f(n), we get:</p>

<p><strong>f(n) = z^(n+1) - 1 / z - 1</strong></p>

<p>Testing mathematical notation support - x<sup>2</sup></p>
]]></content></item><item><title>Setting Up Hugo</title><link>https://av1nash.github.io/posts/setting-up-hugo/</link><pubDate>Fri, 29 Nov 2019 23:35:30 -0500</pubDate><guid>https://av1nash.github.io/posts/setting-up-hugo/</guid><description> Overview Prerequisites</description><content type="html">
&lt;h1 id="overview">Overview&lt;/h1>
&lt;h1 id="prerequisites">Prerequisites&lt;/h1></content></item><item><title>Mssql Find and Remove Hidden Chars</title><link>https://av1nash.github.io/posts/mssql-find-and-remove-hidden-chars/</link><pubDate>Tue, 26 Mar 2019 00:00:01 -0500</pubDate><guid>https://av1nash.github.io/posts/mssql-find-and-remove-hidden-chars/</guid><description>When working with large text fields (usually they come from fields which allow users to enter free text in front end or email body etc.) it is possible to encounter data which has invisible characters. These characters could be invisible to your eyes in management studio while querying or to certain functions like - LTRIM, RTRIM or in a predicate condition like -
WHERE([ColumnName]) &amp;lt;&amp;gt; &amp;#39;&amp;#39; You can try a brute force method to resolve this by replacing commonly occuring invisible characters like -</description><content type="html"><![CDATA[<p>When working with large text fields (usually they come from fields which allow users to enter free text in front end or email body etc.) it is possible to encounter data which has invisible characters.
These characters could be invisible to your eyes in management studio while querying or to certain functions like - LTRIM, RTRIM or in a predicate condition like -</p>
<div class="highlight"><pre style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sql" data-lang="sql"><span style="color:#fff;font-weight:bold">WHERE</span>([ColumnName]) &lt;&gt; <span style="color:#0ff;font-weight:bold">&#39;&#39;</span></code></pre></div>
<p>You can try a brute force method to resolve this by replacing commonly occuring invisible characters like -</p>

<table>
<thead>
<tr>
<th align="left">Character</th>
<th align="left">ASCII Value</th>
</tr>
</thead>

<tbody>
<tr>
<td align="left">Line Feed</td>
<td align="left">10</td>
</tr>

<tr>
<td align="left">Carriage Return</td>
<td align="left">13</td>
</tr>

<tr>
<td align="left">Horizontal Tab</td>
<td align="left">9</td>
</tr>

<tr>
<td align="left">Non-breaking space</td>
<td align="left">160</td>
</tr>
</tbody>
</table>

<p>You can read more about it here: <a href="https://en.wikipedia.org/wiki/ASCII">ASCII character list</a></p>

<p>To replace you use this pattern:</p>
<div class="highlight"><pre style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sql" data-lang="sql"><span style="color:#fff;font-weight:bold">REPLACE</span>(<span style="color:#fff;font-weight:bold">CAST</span>([columnname] <span style="color:#fff;font-weight:bold">AS</span> <span style="color:#fff;font-weight:bold">VARCHAR</span>(<span style="color:#fff;font-weight:bold">max</span>)),<span style="color:#fff;font-weight:bold">CHAR</span>(<span style="color:#ff0;font-weight:bold">10</span>),<span style="color:#0ff;font-weight:bold">&#39;&#39;</span>)</code></pre></div>
<p>You can keep on adding more Replace statements as required in your case.</p>

<p><i class="fa fa-exclamation-triangle" style="color:#FF0000;"></i> Please be aware that if this [columnname] is large in size, your query performance will degrade.</p>
]]></content></item><item><title>Mssql Counting Rows</title><link>https://av1nash.github.io/posts/mssql-counting-rows/</link><pubDate>Fri, 29 Dec 2017 00:00:01 -0500</pubDate><guid>https://av1nash.github.io/posts/mssql-counting-rows/</guid><description>One can count number of rows in a table in many ways and depending upon the chosen option results may or may not be same.
Reason being the way SQL handles NULL while counting. Following are three different ways to COUNT number of rows in a table:
Query Results SELECT COUNT(*) returns total row count SELECT COUNT(1) returns total row count SELECT COUNT([Col Name]) returns row count where [Col Name] IS NOT NULL</description><content type="html"><![CDATA[<p>One can count number of rows in a table in many ways and depending upon the chosen option results may or may not be same.</p>

<p>Reason being the way SQL handles NULL while counting. Following are three different ways to COUNT number of rows in a table:</p>

<table>
<thead>
<tr>
<th>Query</th>
<th>Results</th>
</tr>
</thead>

<tbody>
<tr>
<td>SELECT COUNT(*)</td>
<td>returns total row count</td>
</tr>

<tr>
<td>SELECT COUNT(1)</td>
<td>returns total row count</td>
</tr>

<tr>
<td>SELECT COUNT([Col Name])</td>
<td>returns row count where [Col Name] IS NOT NULL</td>
</tr>
</tbody>
</table>
]]></content></item><item><title>Mssql Finding Primenumbers</title><link>https://av1nash.github.io/posts/mssql-finding-primenumbers/</link><pubDate>Sun, 26 Feb 2017 00:00:01 -0500</pubDate><guid>https://av1nash.github.io/posts/mssql-finding-primenumbers/</guid><description>This is a problem I found in Hacker Rank. I did not had a clue how I can solve it in MS SQL, I mean I know what the logic of finding a prime number is but how do I apply that to MS SQL.
Then I came across this solution from a user rodbourn and this is an absolutely amazing SQL query, every line is a concept in itself and I thought I will dissect it to understand it and maybe help someone else in the process.</description><content type="html"><![CDATA[<p>This is a problem I found in <a href="https://www.hackerrank.com/challenges/print-prime-numbers">Hacker Rank</a>. I did not had a clue how I can solve it in MS SQL, I mean I know what the logic of finding a prime number is but how do I apply that to MS SQL.</p>

<p>Then I came across this solution from a user <strong>rodbourn</strong> and this is an absolutely amazing SQL query, every line is a concept in itself and I thought I will dissect it to understand it and maybe help someone else in the process.</p>

<p>For those who are experienced and do not want to read the conceptual breakdown of the query, here is the entire query:</p>
<div class="highlight"><pre style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sql" data-lang="sql"><span style="color:#fff;font-weight:bold">DECLARE</span> @Primes <span style="color:#fff;font-weight:bold">VARCHAR</span>(<span style="color:#fff;font-weight:bold">MAX</span>);

<span style="color:#fff;font-weight:bold">WITH</span> vals <span style="color:#fff;font-weight:bold">as</span> (
<span style="color:#fff;font-weight:bold">SELECT</span> ones.n + <span style="color:#ff0;font-weight:bold">10</span>*tens.n + <span style="color:#ff0;font-weight:bold">100</span>*hund.n value
<span style="color:#fff;font-weight:bold">FROM</span> (<span style="color:#fff;font-weight:bold">VALUES</span>(<span style="color:#ff0;font-weight:bold">0</span>),(<span style="color:#ff0;font-weight:bold">1</span>),(<span style="color:#ff0;font-weight:bold">2</span>),(<span style="color:#ff0;font-weight:bold">3</span>),(<span style="color:#ff0;font-weight:bold">4</span>),(<span style="color:#ff0;font-weight:bold">5</span>),(<span style="color:#ff0;font-weight:bold">6</span>),(<span style="color:#ff0;font-weight:bold">7</span>),(<span style="color:#ff0;font-weight:bold">8</span>),(<span style="color:#ff0;font-weight:bold">9</span>)) ones(n),
     (<span style="color:#fff;font-weight:bold">VALUES</span>(<span style="color:#ff0;font-weight:bold">0</span>),(<span style="color:#ff0;font-weight:bold">1</span>),(<span style="color:#ff0;font-weight:bold">2</span>),(<span style="color:#ff0;font-weight:bold">3</span>),(<span style="color:#ff0;font-weight:bold">4</span>),(<span style="color:#ff0;font-weight:bold">5</span>),(<span style="color:#ff0;font-weight:bold">6</span>),(<span style="color:#ff0;font-weight:bold">7</span>),(<span style="color:#ff0;font-weight:bold">8</span>),(<span style="color:#ff0;font-weight:bold">9</span>)) tens(n),
     (<span style="color:#fff;font-weight:bold">VALUES</span>(<span style="color:#ff0;font-weight:bold">0</span>),(<span style="color:#ff0;font-weight:bold">1</span>),(<span style="color:#ff0;font-weight:bold">2</span>),(<span style="color:#ff0;font-weight:bold">3</span>),(<span style="color:#ff0;font-weight:bold">4</span>),(<span style="color:#ff0;font-weight:bold">5</span>),(<span style="color:#ff0;font-weight:bold">6</span>),(<span style="color:#ff0;font-weight:bold">7</span>),(<span style="color:#ff0;font-weight:bold">8</span>),(<span style="color:#ff0;font-weight:bold">9</span>)) hund(n)
<span style="color:#fff;font-weight:bold">WHERE</span> ones.n + <span style="color:#ff0;font-weight:bold">10</span>*tens.n + <span style="color:#ff0;font-weight:bold">100</span>*hund.n <span style="color:#fff;font-weight:bold">BETWEEN</span> <span style="color:#ff0;font-weight:bold">2</span> <span style="color:#fff;font-weight:bold">AND</span> <span style="color:#ff0;font-weight:bold">1000</span>
),
primes <span style="color:#fff;font-weight:bold">as</span> (
    <span style="color:#fff;font-weight:bold">SELECT</span> TOP <span style="color:#ff0;font-weight:bold">1000</span> value
    <span style="color:#fff;font-weight:bold">FROM</span> vals valPar
    <span style="color:#fff;font-weight:bold">WHERE</span> <span style="color:#fff;font-weight:bold">NOT</span> <span style="color:#fff;font-weight:bold">EXISTS</span> (
        <span style="color:#fff;font-weight:bold">SELECT</span> <span style="color:#ff0;font-weight:bold">1</span> <span style="color:#fff;font-weight:bold">FROM</span> vals valSub 
        <span style="color:#fff;font-weight:bold">WHERE</span> valSub.value != valPar.value <span style="color:#fff;font-weight:bold">AND</span> valSub.value != <span style="color:#ff0;font-weight:bold">1</span>
            <span style="color:#fff;font-weight:bold">AND</span> (valPar.value +<span style="color:#ff0;font-weight:bold">0</span>.<span style="color:#ff0;font-weight:bold">0</span>) / valSub.value = (valPar.value / valSub.value)
    )
    <span style="color:#fff;font-weight:bold">ORDER</span> <span style="color:#fff;font-weight:bold">BY</span> value
)
<span style="color:#fff;font-weight:bold">SELECT</span> @Primes = COALESCE(@Primes +<span style="color:#0ff;font-weight:bold">&#39;&amp;&#39;</span>, <span style="color:#0ff;font-weight:bold">&#39;&#39;</span>) + <span style="color:#fff;font-weight:bold">CAST</span>(value <span style="color:#fff;font-weight:bold">as</span> <span style="color:#fff;font-weight:bold">varchar</span>(<span style="color:#ff0;font-weight:bold">50</span>))
<span style="color:#fff;font-weight:bold">FROM</span> primes;

PRINT @Primes</code></pre></div>
<p>Now let dissect this query concept-wise.
1. <a href="https://msdn.microsoft.com/en-us/library/ms175972.aspx">Common Table Expression</a> - We know what CTEs are, what is interesting to note here is that you can define multiple CTE in a single query separated by a comma. CTE names defined here are - <em>vals and primes</em>
2. <a href="https://msdn.microsoft.com/en-us/library/dd776382.aspx">Table value constructor</a> - Although this feature is available since MS SQL Server 2008, most of us barely know that it exists (atleast I did not). It is a way to specify a set of row values expresssions into a table.</p>
]]></content></item><item><title>Setting Up Vstools for RServices</title><link>https://av1nash.github.io/posts/setting-up-vstools-for-rservices/</link><pubDate>Sun, 12 Feb 2017 00:00:01 -0500</pubDate><guid>https://av1nash.github.io/posts/setting-up-vstools-for-rservices/</guid><description>I am trying to follow this course Introduction to Microsoft R Server but with the exception that I wanted to run the R script on my SQL Server R Services (in database) rather than Microsoft R Client. This required making following changes:
Specifying path of R Engine in VS RTool.
Open RTools Options and specify the path to your Rserver folder (default in case of SQL Server 2016 is C:\Program Files\Microsoft SQL Server\130\R_SERVER) 2.</description><content type="html"><![CDATA[<p>I am trying to follow this course <a href="https://smott.gitbooks.io/introduction-to-microsoft-r-server/content/">Introduction to Microsoft R Server</a> but with the exception that I wanted to run the R script on my SQL Server R Services (in database) rather than Microsoft R Client.
This required making following changes:</p>

<ol>
<li><p>Specifying path of R Engine in VS RTool.</p>

<ul>
<li>Open RTools Options and specify the path to your Rserver folder (default in case of SQL Server 2016 is <code>C:\Program Files\Microsoft SQL Server\130\R_SERVER</code>)</li>
</ul></li>
</ol>

<p><img src="/img/VS-RTool-Options.png" alt="VSRtool options" />
2. Installing R packages in the library folder of R Server.</p>

<ul>
<li>You can no longer install package from Visual Studio R Tool itself, you will have to open a command prompt <strong>as an administrator</strong>. Go to the directory where your R.exe file is kept (default path is <code>C:\Program Files\Microsoft SQL Server\130\R_SERVER\bin\x64</code>)</li>
<li>Set the library to SQL Server library location and install the relevant package</li>
</ul>
<div class="highlight"><pre style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"> lib.SQL &lt;-<span style="color:#0ff;font-weight:bold">&#34;C:/Program Files/Microsoft SQL Server/130/R_SERVER/library&#34;</span>
 install.packages(<span style="color:#0ff;font-weight:bold">&#34;dplyr&#34;</span>, lib = lib.SQL)</code></pre></div>]]></content></item><item><title>Setup Sqlserver Rservices</title><link>https://av1nash.github.io/posts/setup-sqlserver-rservices/</link><pubDate>Sat, 11 Feb 2017 00:00:01 -0500</pubDate><guid>https://av1nash.github.io/posts/setup-sqlserver-rservices/</guid><description>MSDN Article here explains in detail the steps required to set up SQL Server R Services (In-Database). For those who have already installed R Services as part of their SQL Server 2016 installation (like me) and looking for enabling the R services, you can open SQL Server management studio and run following command:
Exec sp_configure &amp;#39;external scripts enabled&amp;#39;, 1 Reconfigure with override Open services.msc and restart SQL Server services. Now you can run a test script to ensure that the changes are in effect.</description><content type="html"><![CDATA[<p><a href="https://msdn.microsoft.com/en-us/library/mt696069.aspx">MSDN Article</a> here explains in detail the steps required to set up SQL Server R Services (In-Database).
For those who have already installed R Services as part of their SQL Server 2016 installation (like me) and looking for enabling the R services, you can open SQL Server management studio and run following command:</p>
<div class="highlight"><pre style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sql" data-lang="sql"><span style="color:#fff;font-weight:bold">Exec</span> sp_configure  <span style="color:#0ff;font-weight:bold">&#39;external scripts enabled&#39;</span>, <span style="color:#ff0;font-weight:bold">1</span>  
Reconfigure  <span style="color:#fff;font-weight:bold">with</span> override   </code></pre></div>
<p>Open services.msc and restart SQL Server services.
Now you can run a test script to ensure that the changes are in effect.</p>
<div class="highlight"><pre style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sql" data-lang="sql"><span style="color:#fff;font-weight:bold">exec</span> sp_execute_external_script  @<span style="color:#fff;font-weight:bold">language</span> =N<span style="color:#0ff;font-weight:bold">&#39;R&#39;</span>,  
@script=N<span style="color:#0ff;font-weight:bold">&#39;OutputDataSet&lt;-InputDataSet&#39;</span>,    
@input_data_1 =N<span style="color:#0ff;font-weight:bold">&#39;select 1 as hello&#39;</span>  
<span style="color:#fff;font-weight:bold">with</span> <span style="color:#fff;font-weight:bold">result</span> <span style="color:#fff;font-weight:bold">sets</span> (([hello] <span style="color:#fff;font-weight:bold">int</span> <span style="color:#fff;font-weight:bold">not</span> <span style="color:#fff;font-weight:bold">null</span>));  
<span style="color:#fff;font-weight:bold">go</span>  </code></pre></div>
<ol>
<li>The @language parameter defines the language extension to call, in this case, R.</li>
<li>In the @script parameter, you define the commands to pass to the R runtime. Your entire R script must be enclosed in this argument, as Unicode text. You could also add the text to a <code>variable of type nvarchar and then call the variable</code>.</li>
<li>The data returned by the query is passed to the R runtime, which returns the data to SQL Server as a data frame.</li>
<li>The WITH RESULT SETS clause defines the <ins>schema</ins> of the returned data table for SQL Server.</li>
</ol>

<p><strong>Output</strong>
<img src="/img/Test-R-Script-output.PNG" alt="R Script Output" /></p>
]]></content></item></channel></rss>